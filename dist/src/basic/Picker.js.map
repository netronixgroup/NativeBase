{"version":3,"sources":["../../../src/basic/Picker.js"],"names":["PickerNB","props","state","modalVisible","currentLabel","getLabel","dataSource","getChildren","children","nextProps","nextLabel","currentDS","nextDS","setState","picker","pickerItem","visible","defaultProps","style","getInitialStyle","itemStyle","items","filter","getIsSelectedValue","child","value","map","_","get","item","isMultiple","length","find","Array","isArray","concat","apply","React","cloneElement","iosIcon","fontSize","lineHeight","onPress","enabled","undefined","_setModalVisible","text","placeholder","renderButton","selectedItem","getSelectedItem","textStyle","note","placeholderStyle","renderIcon","renderHeader","headerStyle","shadowOffset","shadowColor","shadowRadius","shadowOpacity","marginLeft","headerBackButtonStyle","headerBackButtonTextStyle","iosHeaderBackIcon","headerTitleStyle","iosHeader","headerApplyButtonText","multiple","selectedValue","includes","_root","c","modalStyle","index","String","label","onValueChange","without","uniq","current","itemTextStyle","itemSelectedIconColor","Component","Item","render","propTypes","ViewPropTypes","PropTypes","func","StyledPickerNB","mapPropsToStyleNames"],"mappings":"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","file":"Picker.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport createReactClass from \"create-react-class\";\nimport { Picker, Modal, View, ViewPropTypes, FlatList } from \"react-native\";\nimport _ from \"lodash\";\nimport { Text } from \"./Text\";\nimport { List } from \"./List\";\nimport { IconNB as Icon } from \"./IconNB\";\nimport { Radio } from \"./Radio\";\nimport { Container } from \"./Container\";\nimport { ListItem } from \"./ListItem\";\nimport { Button } from \"./Button\";\nimport { Header } from \"./Header\";\nimport { Title } from \"./Title\";\nimport { Left } from \"./Left\";\nimport { Right } from \"./Right\";\nimport { Body } from \"./Body\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport computeProps from \"../utils/computeProps\";\n\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass PickerNB extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      currentLabel: this.getLabel(props),\n      dataSource: this.getChildren(props.children)\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const currentLabel = this.state.currentLabel;\n    const nextLabel = this.getLabel(nextProps);\n    const currentDS = this.state.dataSource;\n    const nextDS = this.getChildren(nextProps.children);\n\n    if (currentLabel !== nextLabel) {\n      this.setState({\n        currentLabel: nextLabel\n      });\n    }\n    if (currentDS !== nextDS) {\n      this.setState({\n        dataSource: nextDS\n      });\n    }\n  }\n\n  getInitialStyle() {\n    return {\n      picker: {\n        // alignItems: 'flex-end'\n      },\n      pickerItem: {}\n    };\n  }\n  _setModalVisible(visible) {\n    this.setState({ modalVisible: visible });\n  }\n\n  prepareRootProps() {\n    const defaultProps = {\n      style: this.getInitialStyle().picker,\n      itemStyle: this.getInitialStyle().pickerItem\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n  getLabel(props) {\n    let children = this.getChildren(props.children);\n    const items = children\n      .filter(child => this.getIsSelectedValue(props, child.props.value))\n      .map(item => _.get(item, \"props.label\"))\n    if (!this.isMultiple(props)) return items[0];\n    return items.length ? items : null;\n  }\n\n  getSelectedItem() {\n    return _.find(\n      this.props.children,\n      child => this.getIsSelectedValue(this.props, child.props.value)\n    );\n  }\n\n  getChildren(children) {\n    if (children && !Array.isArray(children)) {\n      return [].concat(children);\n    }\n    children = [].concat.apply([], children)\n    return children;\n  }\n\n  renderIcon() {\n    return React.cloneElement(this.props.iosIcon, {\n      style: [\n        {\n          fontSize: 22,\n          lineHeight: 26\n        },\n        { ...this.props.iosIcon.props.style }\n      ]\n    });\n  }\n\n  renderButton() {\n    const onPress = () => {\n      if (this.props.enabled !== undefined && !this.props.enabled) return;\n      this._setModalVisible(true);\n    };\n    const text = this.state.currentLabel\n      ? this.state.currentLabel\n      : this.props.placeholder;\n    if (this.props.renderButton) {\n      return this.props.renderButton({\n        onPress,\n        text,\n        picker: this,\n        selectedItem: this.getSelectedItem()\n      });\n    }\n    return (\n      <Button\n        style={this.props.style}\n        dark\n        picker\n        transparent\n        onPress={onPress}\n      >\n        {this.state.currentLabel ? (\n          <Text style={this.props.textStyle} note={this.props.note} uppercase={false}>\n            {this.isMultiple(this.props) ? (\n              this.state.currentLabel.length > 1 ? `${this.state.currentLabel[0]}...` : this.state.currentLabel[0]\n            ) : this.state.currentLabel}\n          </Text>\n        ) : (\n            <Text\n              uppercase={false}\n              style={[this.props.textStyle, this.props.placeholderStyle]}\n              note={this.props.note === false ? false : true}\n            >\n              {this.props.placeholder}\n            </Text>\n          )}\n        {this.props.iosIcon === undefined ? null : this.renderIcon()}\n      </Button>\n    );\n  }\n\n  renderHeader() {\n    return this.props.renderHeader ? (\n      this.props.renderHeader(() => this._setModalVisible(false))\n    ) : (\n        <Header style={this.props.headerStyle}>\n          <Left>\n            <Button\n              style={{\n                shadowOffset: null,\n                shadowColor: null,\n                shadowRadius: null,\n                shadowOpacity: null,\n                marginLeft: 3,\n                ...this.props.headerBackButtonStyle\n              }}\n              transparent\n              onPress={() => {\n                this._setModalVisible(false);\n              }}\n            >\n              <Text style={this.props.headerBackButtonTextStyle}>\n                {this.props.iosHeaderBackIcon || \"Back\"}\n              </Text>\n            </Button>\n          </Left>\n          <Body>\n            <Title style={this.props.headerTitleStyle}>\n              {this.props.iosHeader || \"Select One\"}\n            </Title>\n          </Body>\n          <Right>\n            {this.isMultiple(this.props) ? (<Button\n                style={{\n                  shadowOffset: null,\n                  shadowColor: null,\n                  shadowRadius: null,\n                  shadowOpacity: null,\n                  marginLeft: 3,\n                  ...this.props.headerBackButtonStyle\n                }}\n                transparent\n                onPress={() => {\n                  this._setModalVisible(false);\n                }}\n              >\n                <Text style={this.props.headerBackButtonTextStyle} uppercase={false}>\n                  {this.props.headerApplyButtonText || \"Done\"}\n                </Text>\n              </Button>) : null}\n          </Right>\n        </Header>\n      );\n  }\n\n  isMultiple(props) {\n    return props.multiple && Array.isArray(props.selectedValue)\n  }\n\n  getIsSelectedValue(props, value) {\n    if (this.isMultiple(props)) {\n      return _.includes(props.selectedValue, value);\n    }\n    return value === props.selectedValue;\n  }\n\n  render() {\n    return (\n      <View ref={c => (this._root = c)}>\n        {this.renderButton()}\n        <Modal\n          // supportedOrientations={this.props.supportedOrientations || null}\n          supportedOrientations={['portrait', 'landscape']}\n          animationType=\"slide\"\n          transparent={false}\n          visible={this.state.modalVisible}\n          onRequestClose={() => {\n            this._setModalVisible(false);\n          }}\n        >\n          <Container style={this.props.modalStyle}>\n            {this.renderHeader()}\n            <FlatList\n              data={this.state.dataSource}\n              keyExtractor={(item, index) => String(index)}\n              renderItem={({ item: { props: { value, label } } }) => (\n                <ListItem\n                  selected={this.getIsSelectedValue(this.props, value)}\n                  button\n                  style={this.props.itemStyle}\n                  onPress={() => {\n                    if (this.isMultiple(this.props)) {\n                      if (this.getIsSelectedValue(this.props, value)) {\n                        this.props.onValueChange(_.without(this.props.selectedValue, value))\n                      } else {\n                        this.props.onValueChange(_.uniq([...this.props.selectedValue, value]))\n                      }\n                    } else {\n                      this._setModalVisible(false);\n                      this.props.onValueChange(value);\n                      this.setState({ current: label });\n                    }\n                  }}\n                >\n                  <Left>\n                    <Text style={this.props.itemTextStyle}>\n                      {label}\n                    </Text>\n                  </Left>\n                  <Right>\n                    {this.getIsSelectedValue(this.props, value) ? (\n                      <Radio selected selectedColor={this.props.itemSelectedIconColor}  />\n                    ) : (\n                        <Radio selected={false} color={this.props.itemSelectedIconColor} />\n                      )}\n                  </Right>\n                </ListItem>\n              )}\n            />\n          </Container>\n        </Modal>\n      </View>\n    );\n  }\n}\n\nPickerNB.Item = createReactClass({\n  render() {\n    return <Picker.Item {...this.props()} />;\n  }\n});\n\nPickerNB.propTypes = {\n  ...ViewPropTypes,\n  renderButton: PropTypes.func\n};\n\nconst StyledPickerNB = connectStyle(\n  \"NativeBase.PickerNB\",\n  {},\n  mapPropsToStyleNames\n)(PickerNB);\n\nexport { StyledPickerNB as PickerNB };\n"]}